{
    "compilerOptions": {
        /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
        "target": "es6",
        /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        "module": "esnext",
        /* Allow javascript files to be compiled. */
        "lib": ["dom", "ES2019"],
        /* Allow javascript files to be compiled. */
        "allowJs": true,
        /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "jsx": "react",
        /* Generates corresponding '.map' file. */
        "sourceMap": true,
        /* Redirect output structure to the directory. */
        "outDir": "./dist/",
        /* Do not emit comments to output. */
        "removeComments": true,
        /* Enable all strict type-checking options. */
        "strict": true,
        /* Raise error on expressions and declarations with an implied 'any' type. */
        "noImplicitAny": true,
        /* Parse in strict mode and emit "use strict" for each source file. */
        "alwaysStrict": true,
        /* Report errors on unused locals. */
        "noUnusedLocals": true,
        /* Report errors on unused parameters. */
        "noUnusedParameters": true,
        /* Report error when not all code paths in function return a value. */
        "noImplicitReturns": true,
        /* Report errors for fallthrough cases in switch statement. */
        "noFallthroughCasesInSwitch": true,
        /* Do not emit outputs if any errors were reported. */
        "noEmitOnError": true,
        /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "moduleResolution": "node",
        /* Base directory to resolve non-absolute module names. */
        "baseUrl": "./src",
        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "allowSyntheticDefaultImports": true,
        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        "esModuleInterop": true,
        /* Skip type checking of all declaration files (*.d.ts) */
        "skipLibCheck": true,
        /* Include modules imported with .json extension */
        "resolveJsonModule": true,
        "paths": {
            "*/": ["./src/*"],
        },
        "declaration": true
    },
    "include": ["src/**/*.ts", "src/**/*.tsx"],
    "exclude": ["node_modules", "dist", "config"]
}
